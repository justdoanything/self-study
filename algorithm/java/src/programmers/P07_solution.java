package programmers;

public class P07_solution {
  public int solution(int[] arr, int A, int B) {
    int answer = 0;
    return answer;
  }
}



/*
 주어진 6 개의 숫자를 무작위로 나열을 하면 길이가 6 인 수열이 만들어집니다. 만들어진 수열에서 인접한 두 숫자를 확인했을 때, 증가하는 경우와 감소하는 경우를 각각 세보려고 합니다.

아래 예시 이미지는 [1, 2, 5, 5, 5, 9 ] 6개의 숫자를 사용하여, 만들 수 있는 수열의 한 종류입니다. 이 경우, 증가되는 세트는 총 2개이며, 감소되는 세트는 총 2개입니다.

[1,2,5,5,5,9] 6개 숫자를 사용하여 만들 수 있는 수열의 종류는 굉장히 많습니다.

ggret.png

6개의 숫자와, A, B 정수가 주어집니다. 모든 수열 중에 증가하는 세트가 A 개이고 감소하는 세트가 B 개인 수열이 몇 가지 인지 반환하는 solution 함수를 제작하세요.

제한사항

증가, 감소 세트 수 : 0 <= A,B <= 5, A + B <= 5
주어진 6개의 숫자의 범위 : 1 ~ 9
입출력 예

arr	A	B	result
[1,2,5,5,5,9]	2	1	11
[1,2,3,4,5,6]	2	3	302
입출력 예 설명
입출력 예 #1
수 1, 2, 5, 5, 5, 9 로 만들수 있는 수열은 총 120 가지 입니다.  이 중에서 증가되는 세트가 2개이면서 동시에 감소되는 세트가 1개인 수열은 총 11 가지 입니다.



테스트 1
입력값 〉	[1, 2, 5, 5, 5, 9], 2, 1
기댓값 〉	11
실행 결과 〉	실행한 결괏값 0이 기댓값 11과 다릅니다.
테스트 2
입력값 〉	[1, 2, 3, 3, 3, 5], 2, 3
기댓값 〉	12
실행 결과 〉	실행한 결괏값 0이 기댓값 12과 다릅니다.

*/